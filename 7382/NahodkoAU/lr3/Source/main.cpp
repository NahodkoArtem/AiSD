#include <iostream>
#include <fstream>
#include <string>
#include <stdlib.h>

using namespace std;

class Queue {					//Класс очередь
 public:
	Queue();				//Инициализация очереди
	void enqueue(const char&);		//Добавление элемента в очередь
	char dequeue();				//Удаление первого элемента из очереди
	int isEmpty();				//Проверка очереди на пустоту
	int isFull();				//Проверка очереди на переполненность
 private:
	static const int maxSize=300;		//Максимальный размер очереди
	char arr[maxSize];			//Массив для хранения найденных чисел
	int start, size;			//Начало и конец очереди
};

Queue::Queue() : size(0), start(0)
{}

void Queue::enqueue(const char &a)
{
	if (isFull()!=0)			//Если очередь не полна, занчит можем вставить элемент
	{
		arr[(start+size)]=a;		//Ставим на ближайшее свободное место, после этого увеличиваем размер очереди на одну единицу
		++size;
	} else
	{
		printf("Очередь переполнена!\n");
		exit(1);
	}
}

char Queue::dequeue()
{
	if (isEmpty()!=0)			//Если очередь не пуста, значит можем достать из неё элемент
	{
		char b = arr[start];		//Присвоим b первый элемент очереди, который будем извлекать
		start=(++start);		//Теперь первым элементом станет второй элемент очереди
		--size;				//Уменьшаем размер очереди и возвращаем элемент b
		return b;
	} else {
		printf("Стек пуст! Невозможно вернуть элемент!\n");
		exit(1);
	}
}

int Queue::isEmpty()
{
	if (size==0) return 0;			//Если размер равен 0
	return 1;
}

int Queue::isFull()
{
	if(size==maxSize) return 0;		//Если размер равен максиммально возможному
	return 1;
}



//Функия, которая выполняет вывод цифр из очереди на консоль в конец строки и запись их в текстовый файл выхода
void print_num(Queue &q_num, ofstream &fout)
{
	char c;
	while (q_num.isEmpty()!=0)		//Если очередь текущая очередь цифр не пуста
	{
		c = q_num.dequeue();		//Достанем из неё первый элемент и выведем его в конец строки в консоли и текстового файла
		fout << c;
		cout << c;
	}
    fout << endl;
    cout << endl;
}

int main()
{
	Queue q_num;				//Очередь цифр, извлечённых из первоначальной строки
	string s;				//Строка которую будем преобразовывать
	ifstream fin("input.txt");		//Файл содержимое которого изменяем
	ofstream fout("output.txt");		//Файл в который записываем результат работы программы

	for (int i = 0; (getline(fin, s)); i++)			//С помощью функции getline разбиваем содержимое файла input.txt на строки для обработки
	{
		cout << "Строка №" << i+1 << endl;
		cout << "Строка до измененеия:" << endl << s << endl;
		cout << "Строка после изменения:" << endl;
		for (int j = 0; j < s.length(); j++)		//Цикл прохода строки для её поэлементной проверки
		{
			if (((int)s[j]>47) && ((int)s[j]<58))	//Если номеру текущего символа соотвествует цифра согласно таблице ASCII
			{
			 q_num.enqueue(s[j]);			//Добавляем эту цифру в очередь
            }
			else
			{
				cout << s[j];			//Если элемент не оказался цифрой, то выводим его на консоль, либо записываем в файл выхода
				fout << s[j];
			}
		}
		print_num(q_num, fout);		//Передаём очереди цифр в функцию print_num для их вывода
	}
}
